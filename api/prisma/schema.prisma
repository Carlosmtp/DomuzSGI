// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(50)
  users users[]
}

model people {
  id        Int    @id @default(autoincrement())
  person_id String @db.VarChar(50)
  name      String @db.VarChar(50)
  lastname  String @db.VarChar(50)
  mail      String @db.VarChar(50)
  phone     String @db.VarChar(50)
  user      users?
}

model users {
  id        Int        @id @default(autoincrement())
  password  String     @db.VarChar(50)
  id_people people     @relation(fields: [personId], references: [id])
  personId  Int        @unique
  id_roles  roles      @relation(fields: [rolId], references: [id])
  rolId     Int
  projects  projects[]

}

model companies {
  id       Int        @id @default(autoincrement())
  nit      String     @db.VarChar(50)
  name     String     @db.VarChar(50)
  projects projects[]
}

model projects {
  id                Int            @id @default(autoincrement())
  front_proyect_id  String         @db.VarChar(50)
  id_users          users          @relation(fields: [userId], references: [id])
  userId            Int
  id_companies      companies      @relation(fields: [companieId], references: [id])
  companieId        Int
  id_project_states project_states @relation(fields: [stateId], references: [id])
  stateId           Int
  id_portfolios     portfolios     @relation(fields: [portfolioId], references: [id])
  portfolioId       Int            @unique
  name              String         @db.VarChar(50)
  longitude         String         @db.VarChar(50)
  latitude          String         @db.VarChar(50)
  baselines         baselines[]
  reports           reports[]
}

model project_states {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(50)
  projects projects[]
}

model aux_portfolios {
  id               Int           @id @default(autoincrement())
  id_clasification clasification @relation(fields: [clasificationId], references: [id])
  clasificationId  Int
  id_type          type          @relation(fields: [typeId], references: [id])
  typeId           Int
  porfolio         portfolios[]
}

model clasification {
  id          Int              @id @default(autoincrement())
  name        String           @db.VarChar(50)
  auxPorfolio aux_portfolios[]
}

model type {
  id          Int              @id @default(autoincrement())
  name        String           @db.VarChar(50)
  auxPorfolio aux_portfolios[]
}

model portfolios {
  id                Int            @id @default(autoincrement())
  name              String         @db.VarChar(50)
  id_aux_portfolios aux_portfolios @relation(fields: [auxId], references: [id])
  auxId             Int
  project           projects?
}

model baselines {
  id              Int       @id @default(autoincrement())
  id_projects     projects  @relation(fields: [projectId], references: [id])
  projectId       Int
  baseline        Int
  start_date      DateTime  @db.Date()
  end_date        DateTime  @db.Date()
  real_start_date DateTime  @db.Date()
  reports         reports[]
}

model reports {
  id                     Int             @id @default(autoincrement())
  id_projects            projects        @relation(fields: [projectId], references: [id])
  projectId              Int
  id_baseline            baselines       @relation(fields: [baselineId], references: [id])
  baselineId             Int
  state_date             DateTime        @db.Date()
  planned_time           Int
  current_time           Int
  planned_cost           Int
  current_cost           Int
  planned_reach          Int
  current_reach          Int
  end_variation          Int
  total_budget_abl       Int
  total_budnet_projected Int
  projected_end_date     DateTime        @db.Date()
  request_made           Int
  request_accepted       Int
  achievements           archievements[]
  difficulties           difficulties[]
}

model archievements {
  id           Int     @id @default(autoincrement())
  archiebement String  @db.VarChar(50)
  id_reports   reports @relation(fields: [reportId], references: [id])
  reportId     Int
}

model difficulties {
  id         Int     @id @default(autoincrement())
  difficulty String  @db.VarChar(50)
  id_reports reports @relation(fields: [reportId], references: [id])
  reportId   Int
}

model perspective {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(50)
  objectives objetives[]
}

model objetives {
  id             Int                   @id @default(autoincrement())
  id_perspective perspective           @relation(fields: [prespectiveId], references: [id])
  prespectiveId  Int
  name           String                @db.VarChar(50)
  description    String                @db.VarChar(250)
  indicators     objetive_indicators[]
}

model objetive_indicators {
  id           Int       @id @default(autoincrement())
  id_objetives objetives @relation(fields: [objectiveId], references: [id])
  objectiveId  Int
  name         String    @db.VarChar(50)
  goal         Float
  periodicity  String    @db.VarChar(50)
}

//the following models are missing the relationships
model initiatives {
  id           Int    @id @default(autoincrement())
  id_objetives Int
  name         String @db.VarChar(50)
  description  String @db.VarChar(250)
}

model action_plans {
  id             Int    @id @default(autoincrement())
  name           String @db.VarChar(50)
  description    String @db.VarChar(250)
  id_initiatives Int
  id_users       Int
  id_plan_states Int
}

model plan_states {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)
}

model processes {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(50)
  description String @db.VarChar(250)
  efficiency  Float
}

model process_indicators {
  id           Int    @id @default(autoincrement())
  name         String @db.VarChar(50)
  objetive     String @db.VarChar(50)
  periodicity  String @db.VarChar(50)
  in_charge    String @db.VarChar(50)
  weight       String @db.VarChar(50)
  id_processes Int
  id_users     Int
}

model periodic_records {
  id                    Int    @id @default(autoincrement())
  id_process_indicators Int
  record_date           String @db.VarChar(50)
  expected_value Int
  archieved_value Int
}
